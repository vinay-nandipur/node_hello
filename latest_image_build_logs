#1 [internal] load build definition from Dockerfile
#1 sha256:641f9d8d53a74cd1b9afad4f9b3df1b0f32dd522c4fd210d99fdf8b8b513e8cb
#1 transferring dockerfile: 37B 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 sha256:c67c681865a5d6939d1d1430d62a770ca6e1ec107c7e6f8017a305a07b0f8ae3
#2 transferring context: 2B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:lts-alpine3.15
#3 sha256:502b49e310c52ebaab40b54f58fc959dd660ca0744192ae78298529130c6bc11
#3 DONE 2.6s

#4 [1/5] FROM docker.io/library/node:lts-alpine3.15@sha256:2c6c59cf4d34d4f937ddfcf33bab9d8bbad8658d1b9de7b97622566a52167f2b
#4 sha256:c6bf6190e77eed1fbe78b5666c7dbfa00e398a36d5192eb42699071abe0d72a2
#4 DONE 0.0s

#6 [internal] load build context
#6 sha256:c74b8a85fe13b714ea5aaad72d8c210329e2545c9dc82c06eda6057f2a1f847b
#6 transferring context: 484.47kB 0.4s done
#6 DONE 0.4s

#5 [2/5] WORKDIR /app
#5 sha256:626f1797ef362e487cf68e9b68476011f12cc264e1af9f6e55eaea19a0dd0540
#5 CACHED

#7 [3/5] COPY package.json /app
#7 sha256:288aac61aca8ebc13297a3220ce63e768daa137387069fc92b5530e4f5810c40
#7 CACHED

#8 [4/5] RUN npm install --only=production && npm cache clean --force
#8 sha256:3dbc4cd20d778d7bf20b8b86fc5b16f0b6253a51f6ff46634dafa5f99672b431
#8 CACHED

#9 [5/5] COPY . /app
#9 sha256:0264b3749e8687d703937f0d1e890a0485d652838c148a4f363d92c2bb2dfc93
#9 DONE 0.9s

#10 exporting to image
#10 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#10 exporting layers
#10 exporting layers 0.9s done
#10 writing image sha256:fb9d76c4ec16332fc63c924d246511b79250451afa4b4a891e281855c28eec15 done
#10 naming to docker.io/library/node_hello done
#10 DONE 0.9s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
